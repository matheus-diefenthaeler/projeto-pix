version: '3.3'

services:
  eureka:
    container_name: eureka
    build:
      context: ./eureka
      dockerfile: Dockerfile
    restart: "no"
    networks:
      - backend
    ports:
      - 8761:8761

  bacen:
    container_name: bacen
    build:
      context: ./bacen
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - 8080:8080
    networks:
      - backend
    depends_on:
      - eureka
      - dynamodb

  banco-itau:
    container_name: banco-itau
    build:
      context: ./banco-itau
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - 8081:8081
    networks:
      - backend
    depends_on:
      - eureka
      - postgres
      - bacen

  banco-ada:
    container_name: banco-ada
    build:
      context: ./banco-ada
      dockerfile: Dockerfile
    restart: "no"
    ports:
      - 8082:8082
    networks:
      - backend
    depends_on:
      - eureka
      - postgres
      - bacen

  postgres:
    image: postgres:15.1-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "1234"
      POSTGRES_DB: "banco-itau"
    networks:
      - backend
    ports:
      - 5432:5432
    expose:
      - 5432

  prometheus:
    container_name: pix-prometheus
    image: prom/prometheus
    restart: "no"
    ports:
      - 9090:9090
    networks:
      - backend
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'

  grafana:
    container_name: pix-grafana
    image: grafana/grafana
    restart: "no"
    networks:
      - backend
    ports:
      - '3000:3000'
    volumes:
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SERVER_PROTOCOL=http
      - GF_SERVER_HTTP_PORT=3000
      - GF_ADMIN_USER=grafana
      - GF_ADMIN_PASSWORD=grafana
    depends_on:
      - prometheus

  dynamodb:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb
    networks:
      - backend
    ports:
      - 8000:8000
    expose:
      - 8000
    volumes:
      - "./data/dynamodb:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal

networks:
  backend: